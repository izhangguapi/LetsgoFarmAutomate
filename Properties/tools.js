const CONFIG={notifications:{timeOut:{title:"星宝农场时长耗完通知",desp:"检测到腾讯先锋云游戏时长已耗尽警告，星宝农场已掉线，请立即查看",},loginFailed:{title:"腾讯先锋账号过期通知",desp:"检测到腾讯先锋已掉线，请立即查看",},},};function sendServerChan(title,desp,sendKey){const keyToUse=sendKey||currentSendKey;if(!keyToUse){console.error("Server酱通知失败: 未提供SendKey");return}const apiUrl="https://sctapi.ftqq.com/"+keyToUse+".send?title="+title+"&desp="+desp;fetch(apiUrl).then((response)=>response.json()).then((result)=>{if(result.code===0){console.log("推送成功:",result)}else{console.error("推送失败:",result)}}).catch((error)=>console.error("请求异常:",error))}function callWinForms(text,color="black"){if(window.chrome?.webview?.postMessage){const messageObj={text:text,color:color,};window.chrome.webview.postMessage(JSON.stringify(messageObj))}else{alert("WebMessage 不可用")}}function initGameAutoHandlers(){const handlers=[{selector:"div.pop",action:(element)=>{element.remove();console.log("检测到遮挡，已删除")},},{selector:"#xf-body-tag > div:nth-child(13) > div > div:nth-child(3) > div:nth-child(3)",action:(element)=>{element.click();console.log("检测到无操作提示，已自动点击继续游戏")},},{selector:"#game-tipbg",action:()=>{callWinForms("检测到游戏自动退出，执行自动刷新页面");callWinForms("REFRESH")},},{selector:"#el-loading-text",action:()=>{callWinForms("检测游戏重连，执行自动刷新页面");callWinForms("REFRESH")},},];function checkAndHandleElements(){handlers.forEach((handler)=>{const element=document.querySelector(handler.selector);if(element)handler.action(element)})}checkAndHandleElements();const observer=new MutationObserver(checkAndHandleElements);observer.observe(document.body,{childList:true,subtree:true,});return observer}const gameObserver=initGameAutoHandlers();function debounce(func,delay){let timeoutId;return function(...args){clearTimeout(timeoutId);timeoutId=setTimeout(()=>{func.apply(this,args)},delay)}}function listenConsole(method,matcher,callback){const original=console[method];console[method]=function(...args){original.apply(console,args);if(typeof matcher==="function"){if(matcher(args))return callback(args)}else{for(const arg of args){if(arg?.message?.includes?.(matcher)){return callback(arg)}if(typeof arg==="string"&&arg.includes(matcher)){return callback(arg)}}if(args.join(" ").includes(matcher)){callback(args)}}};return()=>{console[method]=original;return`已停止监听${method}`}}const powerSavingMode=listenConsole("log","11999",debounce((arg)=>{callWinForms("检测到进入省电模式");Mouse.click(btnOffset.jumpBtn)},300));const stuck=listenConsole("log","ReconnectError",(arg)=>{callWinForms("检测到游戏页面卡死");callWinForms("REFRESH")});const webSocketClosed=listenConsole("error","WebSocket",(arg)=>{callWinForms("检测到WebSocket已处于关闭状态");callWinForms("REFRESH")});const timeoutListener=listenConsole("warn","耗尽",(arg)=>{callWinForms("检测到云游戏时长已耗尽警告");if(typeof currentSendKey!=="undefined"){sendServerChan(CONFIG.notifications.timeOut.title,CONFIG.notifications.timeOut.desp)}});const loginListener=listenConsole("warn","请登录",(arg)=>{callWinForms("检测到登录失效");if(typeof currentSendKey!=="undefined"){sendServerChan(CONFIG.notifications.loginFailed.title,CONFIG.notifications.loginFailed.desp)}});