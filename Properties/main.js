const btnOffset={blank:{x:0.075,y:0.973},jumpBtn:{x:0.741,y:0.822},resetBtn:{x:0.959,y:0.907},leftBtn:{x:0.76,y:0.65},rightBtn:{x:0.86,y:0.55},closeBtn:{x:0.72,y:0.27},skipBtn:{x:0.625,y:0.733},acceptBtn:{x:0.63,y:0.65},okBtn:{x:0.5,y:0.65},bigBtn:{x:0.875,y:0.8},aquarium:{left:0.05,top:0.13,},hotspring:{top:0.178,right:0.098,socializing:{x:0.9625,y:0.3},inputbox:{x:0.7,y:0.94},oneself:{x:0.77,y:0.16},visit:{x:0.965,y:0.3},gohome:{x:0.91,y:0.07},},pray:{btn:{x:0.785,y:0.88},left:{x:0.72,y:0.6},right:{x:0.875,y:0.6},},};const sleep=(ms)=>new Promise((resolve)=>setTimeout(resolve,ms));const Keyboard={createKeyboardEvent(type,key){return new KeyboardEvent(type,{bubbles:true,cancelable:true,key,code:`Key${key.toUpperCase()}`,keyCode:key.charCodeAt(0),})},async down(key,wait=0){document.dispatchEvent(this.createKeyboardEvent("keydown",key));await sleep(wait)},async up(key,wait=0){document.dispatchEvent(this.createKeyboardEvent("keyup",key));await sleep(wait)},async press(key,wait=0,duration=100){await this.down(key);await sleep(duration);await this.up(key);await sleep(wait)},};const GameState={clientWidth:0,clientHeight:0,gameWidth:0,gameHeight:0,offsetLeft:0,offsetTop:0,};const Mouse={getGameView(){const gameView=document.querySelector(".gmsdk-video-player");if(!gameView){console.error("游戏视图元素未找到");return false}if(GameState.clientWidth!==gameView.clientWidth||GameState.clientHeight!==gameView.clientHeight){GameState.clientWidth=gameView.clientWidth;GameState.clientHeight=gameView.clientHeight;const calculateWidth=gameView.clientHeight*(16/9);const calculateHeight=gameView.clientWidth*(9/16);if(calculateWidth>gameView.clientWidth){GameState.gameWidth=gameView.clientWidth;GameState.gameHeight=calculateHeight;GameState.offsetTop=(gameView.clientHeight-calculateHeight)/2;GameState.offsetLeft=0}else{GameState.gameWidth=calculateWidth;GameState.gameHeight=gameView.clientHeight;GameState.offsetLeft=(gameView.clientWidth-calculateWidth)/2;GameState.offsetTop=0}}return true},convertToGameCoords(ratioCoords){this.getGameView();if(!ratioCoords){console.error("坐标为空",ratioCoords);return null}if(ratioCoords.x<0||ratioCoords.x>1||ratioCoords.y<0||ratioCoords.y>1){console.error("坐标超出范围",ratioCoords);return null}const x=GameState.offsetLeft+GameState.gameWidth*ratioCoords.x;const y=GameState.offsetTop+GameState.gameHeight*ratioCoords.y;return{x,y}},async click(ratioCoords,wait=100,duration=100){const coords=this.convertToGameCoords(ratioCoords);if(!coords){return false}const targetElement=document.elementFromPoint(coords.x,coords.y);if(!targetElement){console.warn("点击位置无可交互元素",coords.x,coords.y);return false}this.dispatchEvent(targetElement,"mousemove",coords.x,coords.y);await sleep(duration);this.dispatchEvent(targetElement,"mousedown",coords.x,coords.y);await sleep(duration);this.dispatchEvent(targetElement,"mouseup",coords.x,coords.y);await sleep(wait);return true},async drag(direction,distanceRatio,duration=500){this.getGameView();const directionMap={left:[-1,0],right:[1,0],top:[0,-1],bottom:[0,1],};if(!directionMap[direction]){console.error(`无效方向:${direction}，支持:left/right/top/bottom`);return false}this.getGameView();const centerX=GameState.clientWidth/2;const centerY=GameState.clientHeight/2;const isHorizontal=direction==="left"||direction==="right";const distance=isHorizontal?GameState.gameWidth*distanceRatio:GameState.gameHeight*distanceRatio;const[xMod,yMod]=directionMap[direction];const endX=centerX+distance*xMod;const endY=centerY+distance*yMod;const targetElement=document.elementFromPoint(centerX,centerY);if(!targetElement){console.warn("拖动起点无可交互元素");return false}this.dispatchEvent(targetElement,"mousemove",centerX,centerY);this.dispatchEvent(targetElement,"mousedown",centerX,centerY);const steps=duration/10;const stepX=(endX-centerX)/steps;const stepY=(endY-centerY)/steps;for(let i=0;i<=steps;i++){await sleep(10);const currentX=centerX+stepX*i;const currentY=centerY+stepY*i;this.dispatchEvent(targetElement,"mousemove",currentX,currentY)}this.dispatchEvent(targetElement,"mouseup",endX,endY);await sleep(500);return true},dispatchEvent(target,type,x,y){if(!target)return false;const event=new MouseEvent(type,{clientX:x,clientY:y,bubbles:true,});return target.dispatchEvent(event)},};async function fakeInput(text,wait=1000){const input=document.activeElement;input.focus();input.value=text;const event=new Event("input",{bubbles:true,cancelable:false,composed:true,});input.dispatchEvent(event);await sleep(wait)}const actionHandlers={init:async()=>{localStorage.setItem("gameVoice",0);localStorage.setItem("xianyou-drag-delay",'{"x":10,"y":10}');localStorage.setItem("xianyou-pc-drag-menu",'{"x":10,"y":1}');if(localStorage.getItem("gameFsr")!=="false"||localStorage.getItem("gameSharpness")!=="1"){localStorage.setItem("gameFsr",false);localStorage.setItem("gameSharpness",1);return location.reload()}[".dw",".g-pc-k",".g-pc-m-tip"].forEach((selector)=>document.querySelector(selector)?.remove());document.querySelector(".g-pc-s-v-close")?.click()},clearScreen:async()=>{await Mouse.click(btnOffset.jumpBtn);for(let i=0;i<2;i++){await Mouse.click(btnOffset.closeBtn);await Mouse.click(btnOffset.okBtn);await Mouse.click(btnOffset.blank);await Mouse.click(btnOffset.skipBtn)}for(const element of["W","A","S","D"]){await Keyboard.press(element)}await Mouse.click(btnOffset.resetBtn)},findDrone:async()=>{await Keyboard.down("A",300);await Mouse.click(btnOffset.jumpBtn,700);Keyboard.up("A")},runDrone:async()=>{await actionHandlers.clearScreen();await actionHandlers.findDrone();await Mouse.click(btnOffset.leftBtn)},findTransmitter:async(selectLeft=true)=>{Keyboard.down("D");await Mouse.click(btnOffset.jumpBtn,500);await Keyboard.up("D",1000);if(selectLeft){await Mouse.click(btnOffset.leftBtn,1000)}else{await Mouse.click(btnOffset.rightBtn,1000)}},aquarium:async()=>{await actionHandlers.clearScreen();await actionHandlers.findTransmitter();await Mouse.drag("top",btnOffset.aquarium.top);await Mouse.drag("left",btnOffset.aquarium.left);await Mouse.click(btnOffset.bigBtn,3200);await Mouse.click(btnOffset.rightBtn,3000);await Mouse.click(btnOffset.blank);console.log("水族箱收获完成");callWinForms("水族箱收获完成","green")},pray:async(select)=>{await actionHandlers.clearScreen();Keyboard.down("S");await Mouse.click(btnOffset.jumpBtn,1800);Keyboard.up("S");await Mouse.click(btnOffset.rightBtn,500);if(select){await Mouse.click(btnOffset.pray.left)}else{await Mouse.click(btnOffset.pray.right)}await Mouse.click(btnOffset.pray.btn,8000);await Mouse.click(btnOffset.blank);console.log("许愿完成");callWinForms("许愿完成","green")},hotspring:async(tea=true,uid=null)=>{await actionHandlers.clearScreen();if(uid){await Mouse.click(btnOffset.hotspring.socializing,2000);await Mouse.click(btnOffset.hotspring.inputbox,2000);await fakeInput(uid);await Mouse.click(btnOffset.hotspring.oneself,3000);await Mouse.click(btnOffset.hotspring.visit,10000)}await Mouse.click(btnOffset.resetBtn);await actionHandlers.findTransmitter();await Mouse.drag("top",btnOffset.hotspring.top);await Mouse.drag("right",btnOffset.hotspring.right);await Mouse.click(btnOffset.bigBtn,4000);await Mouse.click(btnOffset.bigBtn,15000);if(tea){await Mouse.click(btnOffset.leftBtn,1000);await Mouse.click(btnOffset.acceptBtn,1000)}if(uid){await Mouse.click(btnOffset.hotspring.gohome,10000)}else{await Mouse.click(btnOffset.resetBtn)}console.log("泡温泉完成");callWinForms("泡温泉完成","green")},};actionHandlers.init();const queue=((tasks)=>({add:(t)=>(tasks.push(t),!queue.p&&queue.process()),p:false,process:async()=>{queue.p=true;while(tasks.length)await tasks.shift()().catch(console.error);queue.p=false},}))([]);window.addEventListener("message",({data:{action,params}})=>{if(!action)return;const handler=actionHandlers[action];if(!handler)return console.error("未找到操作:",action);queue.add(()=>handler(...(params||[])))});